@using Gestionale.DomainModel
@model Gestionale.DomainModel.AllTransportsViewModel

<div class="transport-background"></div>
<div class="transport-content">
    <div class="text-center mb-4">
        <a href="/transport/edit/" class="btn btn-success">
            <i class="fas fa-cart-plus"></i> New Transport
        </a>
    </div>

    <div class="table-container">
        <table class="table table-dark table-hover">
            <thead>
            <tr>
                <th>Id</th>
                <th>IdProduct</th>
                <th>IdStorage</th>
                <th>DestCity</th>
                <th>DestAddress</th>
                <th>Cost</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var t in Model.Transports)
            {
                <tr>
                    <td>@t.Id</td>
                    <td>@t.Product.Name (@t.Product.Brand)</td>
                    <td>@t.Storage.City (@t.Storage.Address)</td>
                    <td>@t.DestCity</td>
                    <td>@t.DestAddress</td>
                    <td>@t.Cost</td>
                    <td>
                        <a href="/transport/edit?id=@t.Id" class="btn btn-primary">
                            Edit <i class="fas fa-pen"></i>
                        </a>
                        <!-- Bottone per aprire il modal -->
                        <button type="button" class="btn btn-danger"
                                data-bs-toggle="modal"
                                data-bs-target="#confirmModal"
                                data-transport-id="@t.Id">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>

    <!-- Modal di conferma globale -->
    <div class="modal fade text-dark" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmModalLabel">Conferma Eliminazione</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Chiudi"></button>
                </div>
                <div class="modal-body">
                    Sei sicuro di voler eliminare questo elemento?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>
                    <form method="post" action="/transport/delete">
                        <input type="hidden" name="Id" id="modalTransportId" value="" />
                        <button type="submit" class="btn btn-danger">Elimina</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Script per aggiornare dinamicamente l'id del prodotto nel modal -->
    <script>
        var confirmModal = document.getElementById('confirmModal');
        confirmModal.addEventListener('show.bs.modal', function (event) {
            
            // Ottieni il bottone che ha attivato il modal
            var button = event.relatedTarget;
            
            // Estrai l'id del prodotto dall'attributo data-transport-id
            var transportId = button.getAttribute('data-transport-id');
            
            // Aggiorna l'input nascosto nel form del modal
            var input = confirmModal.querySelector('#modalTransportId');
            
            input.value = transportId;
        });
    </script>

    <!--  Script per eseguire il redirect automatico alla pagina  -->
    <script>
        // Seleziona il form di cancellazione presente nel modal
        const deleteForm = document.querySelector('form[action="/transport/delete"]');

        // Aggiunge un listener all'evento "submit" del form
        deleteForm.addEventListener('submit', function(event) {
            event.preventDefault(); // Previene il comportamento predefinito del form (reload della pagina)

            // Crea un oggetto FormData che raccoglie i dati del form (l'id del prodotto da cancellare)
            const formData = new FormData(deleteForm);

            // Invia la richiesta POST al server tramite fetch
            fetch(deleteForm.action, {
                method: deleteForm.method,  // Utilizza il metodo definito nel form (POST)
                body: formData              // Invia i dati del form
            })
                .then(response => response.json()) // Converte la risposta del server in JSON,
                // che dovrebbe essere un oggetto CommandResponse
                .then(commandResponse => {
                    if (commandResponse) {
                        window.location.href = commandResponse.returnUrl;
                    } else {
                        // Se l'operazione non è riuscita, mostra un messaggio d'errore
                        alert(commandResponse.message);
                    }
                })
                .catch(error => {
                    // Gestione degli errori: logga l'errore in console e mostra un messaggio all'utente
                    console.error("Errore durante la cancellazione:", error);
                    alert("Si è verificato un errore durante la cancellazione.");
                });
        });
    </script>
</div>