@using Gestionale.DomainModel
@model Gestionale.DomainModel.AllStoragesViewModel

<div class="storage-background"></div>
<div class="storage-content">
    <div class="text-center mb-4">
        <a href="/storage/edit/" class="btn btn-success">
            <i class="fas fa-warehouse"></i> New Storage
        </a>
    </div>
    <div class="table-container">
        <table class="table table-dark table-hover">
            <thead>
                <tr>
                <th>Id</th>
                <th>City</th>
                <th>Address</th>
                <th>IsActive</th>
                <th>Actions</th>
                </tr>
            </thead>
        <tbody>
        @foreach (var s in Model.Storages)
        {
            <tr>
                <td>@s.Id</td>
                <td>@s.City</td>
                <td>@s.Address</td>
                <td>@s.Active</td>
                <td>
                    <a href="/storage/edit?id=@s.Id" class="btn btn-primary">
                        Edit <i class="fas fa-pen"></i>
                    </a>
                    <!--  Bottone per aprire il modal  -->
                    <button type="button" class="btn btn-danger"
                            data-bs-toggle="modal"
                            data-bs-target="#confirmModal"
                            data-storage-id="@s.Id">
                        <i class="fas fa-trash"></i> Delete
                    </button>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <!-- Modal di conferma globale -->
    <div class="modal fade text-dark" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmModalLabel">Conferma Eliminazione</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Chiudi"></button>
                </div>
                <div class="modal-body">
                    Sei sicuro di voler eliminare questo elemento?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>
                    <form method="post" action="/storage/delete">
                        <input type="hidden" name="Id" id="modalStorageId" value="" />
                        <button type="submit" class="btn btn-danger">Elimina</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Script per aggiornare dinamicamente l'id del prodotto nel modal -->
    <script>
        var confirmModal = document.getElementById('confirmModal');
        confirmModal.addEventListener('show.bs.modal', function (event) {
            
            // Ottieni il bottone che ha attivato il modal
            var button = event.relatedTarget;
            
            // Estrai l'id del prodotto dall'attributo data-storage-id
            var storageId = button.getAttribute('data-storage-id');
            
            // Aggiorna l'input nascosto nel form del modal
            var input = confirmModal.querySelector('#modalStorageId');
            
            input.value = storageId;
        });
    </script>

    <!--  Script per eseguire il redirect automatico alla pagina  -->
    <script>
        // Seleziona il form di cancellazione presente nel modal
        const deleteForm = document.querySelector('form[action="/storage/delete"]');

        // Aggiunge un listener all'evento "submit" del form
        deleteForm.addEventListener('submit', function(event) {
            event.preventDefault(); // Previene il comportamento predefinito del form (reload della pagina)

            const formData = new FormData(deleteForm);

            // Invia la richiesta POST al server tramite fetch
            fetch(deleteForm.action, {
                method: deleteForm.method,  // Utilizza il metodo definito nel form (POST)
                body: formData              // Invia i dati del form
            })
                .then(response => response.json()) // Converte la risposta del server in JSON,
                // che dovrebbe essere un oggetto CommandResponse
                .then(commandResponse => {
                    // Verifica se l'operazione è andata a buon fine
                    if (commandResponse) {
                        window.location.href = commandResponse.returnUrl;
                    } else {
                        // Se l'operazione non è riuscita, mostra un messaggio d'errore
                        alert(commandResponse.message);
                    }
                })
                .catch(error => {
                    // Gestione degli errori: logga l'errore in console e mostra un messaggio all'utente
                    console.error("Errore durante la cancellazione:", error);
                    alert("Si è verificato un errore durante la cancellazione.");
                });
        });
    </script>
</div>